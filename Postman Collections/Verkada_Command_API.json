{
	"info": {
		"_postman_id": "69b6611d-1a82-40f3-a096-a8e5ef4d3625",
		"name": "Verkada Command API",
		"description": "For Verkada's full API documentation see [https://apidocs.verkada.com/reference/introduction](https://apidocs.verkada.com/reference/introduction)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "API Tokens",
			"item": [
				{
					"name": "Get API Token",
					"id": "f552ef82-cd4c-4eee-85f4-327f2abbba09",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "https://{{region}}.verkada.com/token",
						"description": "[https://apidocs.verkada.com/reference/postloginapikeyviewv2](https://apidocs.verkada.com/reference/postloginapikeyviewv2)\n\nAPI Tokens are required to make requests to any Verkada API endpoints with the exception of the Get Streaming Token endpoints, which requires a top-level API Key for authentication, as well as the Stream Footage (live or historical) API that requires a JSON Web Token (JWT).\n\nAPI Tokens inherit permissions from the top-level API key used to generate them and will be limited to that same permission scope. If the API Key used to generate an API Token only has Camera Read-Only permissions, then the associated API Token would only be authorized to call Camera GET endpoints.\n\nAPI Tokens are valid for 30 minutes and cannot be refreshed. Users will need to call the Get API Token endpoint again to retrieve a new Token if their previous one has expired. When making a call using an expired API Token, users will receive a 401 Authentication Error as well as the following error message:\n\n`{'id': '0e2d', 'message': 'Token expired', 'data': None}`"
					},
					"response": []
				}
			],
			"id": "9df149ca-fb43-4413-908d-98f2f4409e54"
		},
		{
			"name": "Camera API",
			"item": [
				{
					"name": "Alerts",
					"item": [
						{
							"name": "Get Alerts",
							"id": "72fa274c-4d5d-4b4b-ad43-29ca39bccad5",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/alerts?include_image_url=false&page_size=100",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"alerts"
									],
									"query": [
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for requested notifications. Formatted as a Unix timestamp in seconds. Default value is an hour ago from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for requested notifications. Formatted as a Unix timestamp in seconds. Default value is the current time.",
											"disabled": true
										},
										{
											"key": "include_image_url",
											"value": "false",
											"description": "The flag to include/exclude image url for notification.  Defaults to false."
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The number of items returned in a single response. Default is 100. Max is 200."
										},
										{
											"key": "notification_type",
											"value": "",
											"description": "One or multiple comma separated values from person_of_interest, tamper, crowd, motion, camera_offline, camera_online.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getnotificationsviewv1](https://apidocs.verkada.com/reference/getnotificationsviewv1)\n\nReturns alerts for an organization within a specified time range.\n\nAlert types include camera offline, camera online, tamper, motion, crowd, and Person of Interest alerts.\n\nMotion alerts include whether people and/or vehicles were detected.\n\nCrowd alerts include the threshold set for the camera that detected the crowd and whether people or vehicles were detected.\n\nPerson of Interest alerts include the label set for the person."
							},
							"response": []
						}
					],
					"id": "53931a5f-df7b-430d-b5c9-d188b7ec5df8"
				},
				{
					"name": "Analytics",
					"item": [
						{
							"name": "Get Occupancy Trend Data",
							"id": "239e61e9-2093-47a4-89ab-361d32c98a73",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/occupancy_trends?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"occupancy_trends"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for occupancy trends. Formatted as a Unix timestamp in seconds. Defaults to an hour from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for occupancy trends. Formatted as a Unix timestamp in seconds. Defaults to the current time.",
											"disabled": true
										},
										{
											"key": "interval",
											"value": "",
											"description": "An enumeration: \"15_minutes\", \"1_hour\", \"6_hours\", \"12_hours\", \"1_day\", \"30_days\".  Default \"1_hour\"",
											"disabled": true
										},
										{
											"key": "type",
											"value": "",
											"description": "An enumeration: \"person\" or \"vehicle\".  Default = \"person\"",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getoccupancytrendsview](https://apidocs.verkada.com/reference/getoccupancytrendsview)\n\nReturns all occupancy trends data for a particular camera over a specified time range.\n\nResponses will include the start and end time of the data requested and device information (ID, serial number) alongside the readings."
							},
							"response": []
						},
						{
							"name": "Get Dashboard Occupancy Trend Data",
							"id": "da61ff7a-1c3b-42ea-960d-68fab2f04db5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/occupancy_trends?dashboard_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"occupancy_trends"
									],
									"query": [
										{
											"key": "dashboard_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the dashboard.\n\n"
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for occupancy trends. Formatted as a Unix timestamp in seconds. Defaults to an hour from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for occupancy trends. Formatted as a Unix timestamp in seconds. Defaults to the current time.",
											"disabled": true
										},
										{
											"key": "interval",
											"value": "",
											"description": "An enumeration: \"15_minutes\", \"1_hour\", \"6_hours\", \"12_hours\", \"1_day\", \"30_days\".  Default \"1_hour\"",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getdashboardoccupancytrendsview](https://apidocs.verkada.com/reference/getdashboardoccupancytrendsview)\n\nReturns all occupancy trends data for a particular dashboard over a specified time range.\n\nResponses will include the start and end time of the data requested and org, dashboard information (ID, name) alongside the readings."
							},
							"response": []
						},
						{
							"name": "Get Max People/Vehicle Counts",
							"id": "fb0d5cd1-11a5-4d5b-b8f0-742ff6bbc8d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/max_object_counts?camera_id={{camera_id}}&start_time=&end_time=&search_zones=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"max_object_counts"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for requested counts. Formatted as a Unix timestamp in seconds. Default value is the current time. If only providing a start time, the same value will be used for end_time\n"
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for requested counts. Formatted as a Unix timestamp in seconds. It can only be used if start_time is also provided"
										},
										{
											"key": "search_zones",
											"value": "",
											"description": "Zones to search Formatted as coordinates ranging from [0,0] to [9,9] e.g., [[3,3],[3,4],[4,3],[4,4]]"
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getmaxobjectcountsviewv1](https://apidocs.verkada.com/reference/getmaxobjectcountsviewv1)\n\nReturns the max count of people and vehicles within a specified time range."
							},
							"response": []
						},
						{
							"name": "Set Object Position MQTT Config",
							"id": "ff309173-11d8-4907-ab6b-aad4b1296cdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"camera_id\": \"camera_id\", // The unique identifier of the camera.\n  \"client_password\": \"client_password\", // The optional password for the server.\n  \"client_username\": \"client_username\", // The optional username for the server.\n  \"broker_host_port\": \"443\", // The host and port for MQTT server. The host could be an IP address or hostname. Port 443 is recommended, and only 443, 123, 53 are supported.\n  \"broker_cert\": \"broker_cert\" // A CA signed cert for broker to be used for TLS connection.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/cameras/v1/analytics/object_position_mqtt",
								"description": "[https://apidocs.verkada.com/reference/postoccupancytrendsmqttconfigview](https://apidocs.verkada.com/reference/postoccupancytrendsmqttconfigview)"
							},
							"response": []
						},
						{
							"name": "Get People/Vehicle Counts",
							"id": "371dec27-14a5-4489-abb5-5eb32b13616d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/object_counts?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"object_counts"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for requested counts. Formatted as a Unix timestamp in seconds. Default value is an hour ago from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for requested counts. Formatted as a Unix timestamp in seconds. Default value is the current time.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "",
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getobjectcountsviewv1](https://apidocs.verkada.com/reference/getobjectcountsviewv1)\n\nReturns the count of people and vehicles within a specified time range."
							},
							"response": []
						}
					],
					"id": "7fe752d5-e873-46f6-bdb3-d49805c53834"
				},
				{
					"name": "LPR",
					"item": [
						{
							"name": "Get seen license plates",
							"id": "04747c1b-6ef0-43ee-99e6-fb4544cd42b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/images?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"lpr",
										"images"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "license_plate",
											"value": "",
											"description": "License plate number to filter by.",
											"disabled": true
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range. Formatted as a Unix timestamp in seconds. Defaults to a day from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range. Formatted as a Unix timestamp in seconds. Defaults to a day from the current time.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "",
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getlprimagesview](https://apidocs.verkada.com/reference/getlprimagesview)\n\nReturns the timestamps, detected license plate numbers, and images of all license plates seen by a camera.\n\nOnly works for cameras that are LPR enabled.\n\nResponse may be paginated if page_token exists.\n\nThis endpoint allows users to programmatically get the detected timestamps, detected license plate numbers, and images of all license plates seen by a Verkada LPR camera. To retrieve the detections, users must input a `camera_id` from a camera in LPR mode.\n\nUsers also have the option to specify a `start_time` and `end_time` to narrow their search, as well as a `license_plate` string to filter results by, and a returned `page_size`.\n\nDepending on the number of seen license plates, the returned JSON may be paginated. See the [Pagination](https://apidocs.verkada.com/reference/pagination) page for more information.\n\n**Note**: Retrieving the seen license plates can only be done for a single camera at a time. It is possible to retrieve the results across multiple cameras through a script that sends multiple GET requests while iterating through a list of camera IDs."
							},
							"response": []
						},
						{
							"name": "Delete a License Plate of Interest",
							"id": "5efda6c5-350f-46e1-ac07-c75bb8138396",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/license_plate_of_interest?license_plate=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"lpr",
										"license_plate_of_interest"
									],
									"query": [
										{
											"key": "license_plate",
											"value": "",
											"description": "** REQUIRED ** The license plate number of the License Plate of Interest."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deletelicenseplateofinterestviewv1](https://apidocs.verkada.com/reference/deletelicenseplateofinterestviewv1)\n\nDeletes a license plate from License Plates of Interest using a specified license plate number.\n\nThis endpoint allows users to programmatically delete License Plates of Interest (LPOI) from their Command organization. To specify which LPOI should be deleted, the user will need to pass the exact license plate number as the `license_plate` parameter of the API request.\n\n**Note**: The inputted `license_plate` must be an exact match of the LPOI profile in Command, otherwise the License Plate of Interest will not be deleted."
							},
							"response": []
						},
						{
							"name": "Get All License Plates of Interest",
							"id": "aa43d0ba-d2b4-42e1-a863-6a0cf0c1ab22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/license_plate_of_interest",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"lpr",
										"license_plate_of_interest"
									],
									"query": [
										{
											"key": "page_size",
											"value": "",
											"description": "The number of items returned in a single response. Default is 1000. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getlicenseplateofinterestviewv1](https://apidocs.verkada.com/reference/getlicenseplateofinterestviewv1)\n\nReturns creation time, description, and license plate number for all License Plates of Interest for an organization.\n\nThis endpoint will programmatically return all License Plate of Interests which are active in a Command organization. Any deleted LPOI profiles will not be included in the response JSON. The returned JSON text will include a comprehensive list of all LPOI profiles including their creation time and license plate number.\n\n**Note:** Depending on the number of LPOIs active in your organization, the returned JSON may be paginated. See the [Pagination](https://apidocs.verkada.com/reference/pagination) page for more information."
							},
							"response": []
						},
						{
							"name": "Update a License of Interest",
							"id": "34b7bc45-8db2-41ec-9a3e-6fdbb8fdc96b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/license_plate_of_interest?license_plate=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"lpr",
										"license_plate_of_interest"
									],
									"query": [
										{
											"key": "license_plate",
											"value": "",
											"description": "** REQUIRED ** The license plate number of the License Plate of Interest. Update description in the Body."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/patchlicenseplateofinterestviewv1](https://apidocs.verkada.com/reference/patchlicenseplateofinterestviewv1)\n\nUpdates a license plate description from License Plates of Interest using a specified license plate number.\n\nEach License Plate of Interest can be paired with a description for easier investigation and management. This UPDATE endpoint can be used to programmatically update a License Plate of Interest's (LPOI) description for your Command organization.\n\nThe endpoint takes two parameters:\n\n- `license_plate` - license plate of the LPOI description that needs to be updated\n    \n- `description` - updated description for the LPOI"
							},
							"response": []
						},
						{
							"name": "Create a License Plate of Interest",
							"id": "16639fc5-d462-4c64-9b53-69498540051c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"plate description\", // The description for the License Plate of Interest.\n  \"license_plate\": \"123abc\" // The license plate number of the License Plate of Interest.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/license_plate_of_interest",
								"description": "[https://apidocs.verkada.com/reference/postlicenseplateofinterestviewv1](https://apidocs.verkada.com/reference/postlicenseplateofinterestviewv1)\n\nCreates a License Plate of Interest for an organization using a specified description and license plate number.\n\nThis endpoint allows users to programmatically create License Plates of Interest (LPOI) from their Command organization. To create the LPOI profile, the user will need to pass the exact license plate number as the `license_plate` parameter of the API request as well as the `description` of the created profile.\n\n**Note**: Make sure to use a clear description of the created LPOI to simplify investigations and profile management."
							},
							"response": []
						},
						{
							"name": "Get Timestamps for a License Plate",
							"id": "4112ed8f-34f4-4e12-b87a-947a2474c3d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/analytics/lpr/timestamps?camera_id={{camera_id}}&license_plate=&start_time=&end_time=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"analytics",
										"lpr",
										"timestamps"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "license_plate",
											"value": "",
											"description": "** REQUIRED ** The requested license plate number."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range. Formatted as a Unix timestamp in seconds. Defaults to a day from the current time."
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range. Formatted as a Unix timestamp in seconds. Defaults to a day from the current time."
										},
										{
											"key": "page_size",
											"value": "",
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getlprtimestampsview](https://apidocs.verkada.com/reference/getlprtimestampsview)\n\nReturns the timestamps for a certain license plate. Only works for cameras that are LPR enabled.\n\nResponse may be paginated if page_token exists.\n\nThis endpoint allows users to programmatically get the timestamps from specific license plate detections across their Verkada LPR fleet. To retrieve the timestamps, users must input a `camera_id` from a camera in LPR mode, as well as the exact `license_plate` string they are looking for.\n\nUsers also have the option to specify a `start_time` and `end_time` to narrow their search, as well as specify the returned `page_size`.\n\nDepending on the number of occurrences of the license plate, the returned JSON may be paginated. See the [Pagination](https://apidocs.verkada.com/reference/pagination) page for more information.\n\n**Note**: Retrieving the timestamps for license plates can only be done for a single camera at a time. It is possible to retrieve the results across multiple cameras through a script that sends multiple GET requests while iterating through a list of camera IDs."
							},
							"response": []
						}
					],
					"id": "a5353cc6-fcd1-468b-8ca5-af73fc9fd140"
				},
				{
					"name": "Audio",
					"item": [
						{
							"name": "Get Camera Audio Status",
							"id": "dbbdd1fe-583c-4f1c-a862-9d5bdd087a2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/audio/status?camera_id",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"audio",
										"status"
									],
									"query": [
										{
											"key": "camera_id",
											"value": null,
											"description": "** REQUIRED ** The unique identifier of the camera."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getcameraaudioviewv1](https://apidocs.verkada.com/reference/getcameraaudioviewv1)\n\nTo use the Camera Audio API, you will need to generate an “Camera Audio” API key (separate from Read only and Read/write API keys)."
							},
							"response": []
						},
						{
							"name": "Update Camera Audio Status",
							"id": "b6d3c957-2787-4715-8216-9b95229210fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"camera_id\": \"\", // The unique identifier of the camera.\n    \"enabled\": true // The status of audio for the camera. If value is True, audio is turned on for the camera.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/cameras/v1/audio/status",
								"description": "[https://apidocs.verkada.com/reference/postcameraaudioviewv1](https://apidocs.verkada.com/reference/postcameraaudioviewv1)\n\nTo use the Camera Audio API, you will need to generate an “Camera Audio” API key (separate from Read only and Read/write API keys). This doesn't work if Camera Audio is globally disabled (visit [Feature Manager](https://help.verkada.com/en/articles/6937133-feature-manager)) or if audio is not supported by the camera model."
							},
							"response": []
						}
					],
					"id": "3a85da68-dbff-409a-83ac-a394e64b8c7a"
				},
				{
					"name": "CloudBackup",
					"item": [
						{
							"name": "Get cloud backup settings for a certain camera",
							"id": "b4f7975f-6ee0-441b-bb49-d7037fd17902",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/cloud_backup/settings?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"cloud_backup",
										"settings"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getcloudbackupviewv1](https://apidocs.verkada.com/reference/getcloudbackupviewv1)"
							},
							"response": []
						},
						{
							"name": "Update cloud backup settings for a certain camera",
							"id": "ec062220-5cad-4be9-a92a-e9f564c94ae1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"camera_id\": \"\", // The unique identifier of the camera.\n  \"days_to_preserve\": \"\", // Delimited list of booleans indicating which days footage should be uploaded. The elements in the array indicate the following days in order: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday. If value is 1, cloud backup is on for that day. If value is 0, cloud backup is off for that day. For example, 0,1,1,1,1,1,0 means only backup on weekdays.\n  \"enabled\": 1, // Status of cloud backup for a camera. If value is 1, cloud backup is enabled. If value is 0, cloud backup is disabled.\n  \"time_to_preserve\": \"\", // Delimited list of start_time, end_time as timeslot for which a user wants footage to be backed up to the cloud, start_time and end_time are integers indicating seconds to midnight, i.e, 3600,7200 means 1am - 2am\n  \"upload_timeslot\": \"\", // Delimited list of start_time, end_time as timeslot for scheduled time for footage upload, start_time and end_time are integers indicating seconds to midnight, i.e, 3600,7200 means 1am - 2am\n  \"video_quality\": \"\", // Quality of the uploaded video. Two values are possible: STANDARD_QUALITY and HIGH_QUALITY.\n  \"video_to_upload\": \"\" // The type of video that is backed-up. Two values are possible: MOTION and ALL.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/cameras/v1/cloud_backup/settings",
								"description": "[https://apidocs.verkada.com/reference/postcloudbackupviewv1](https://apidocs.verkada.com/reference/postcloudbackupviewv1)\n\nIf camera cloud backup has been enabled and disabled before, enabling it again will start backup from last disabled time."
							},
							"response": []
						}
					],
					"id": "b318100b-3cd2-481e-8d3d-b1c126202011"
				},
				{
					"name": "Devices",
					"item": [
						{
							"name": "Get Camera Data",
							"id": "b98e7a70-d730-42e6-9aaf-d58fb4c1b11d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://{{region}}.verkada.com/cameras/v1/devices",
								"description": "[https://apidocs.verkada.com/reference/getcamerainfoviewv1](https://apidocs.verkada.com/reference/getcamerainfoviewv1)\n\nReturns details of all cameras within the organization.\n\nDetails returned per camera are name, site, location, model, serial number, camera ID, MAC address, local IP, device retention, extended cloud retention (if any), date camera added to command, firmware update status, camera status, location latitude, location longitude, and location angle (in degrees)."
							},
							"response": []
						}
					],
					"id": "45ee190d-ad23-4395-8cb4-576c40d2c5ae"
				},
				{
					"name": "Footage",
					"item": [
						{
							"name": "Get Link to Footage",
							"id": "423eb042-fe6c-4ba6-8f02-0f11aa8bbe18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/footage/link?camera_id={{camera_id}}&timestamp=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"footage",
										"link"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "timestamp",
											"value": "",
											"description": "The timestamp of the footage on a specified camera. Formatted as a Unix timestamp in seconds. If no timestamp is specified, a live link will be returned"
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/gethistoryurlviewv1](https://apidocs.verkada.com/reference/gethistoryurlviewv1)\n\nReturns link to video footage for a specified camera which will play footage from a specified timestamp."
							},
							"response": []
						},
						{
							"name": "Get Thumbnail Image",
							"id": "b80049c3-e2fa-4635-aa2f-c77eaacb3812",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/footage/thumbnails?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"footage",
										"thumbnails"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "timestamp",
											"value": "",
											"description": "The approximate timestamp of the requested thumbnail. Formatted as a Unix timestamp in seconds.\nDefaults to the current time.",
											"disabled": true
										},
										{
											"key": "resolution",
											"value": "",
											"description": "An enumeration.  \"low-res\" or \"hi-res\".  Default: \"low-res\"",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getthumbnailimageviewv1](https://apidocs.verkada.com/reference/getthumbnailimageviewv1)\n\nReturns a low-resolution or high-resolution thumbnail from a specified camera at or near a specified time.\n\nDefaults to low-resolution thumbnails.\n\nThe Get Thumbnail Image API endpoint allows users to automatically extract thumbnails from cameras within their Command organization by inputting a camera ID as well as a Unix timestamp in seconds.\n\nIt is important to note that although users must specify a timestamp at which to retrieve the specific image, the returned image may not exactly match that timestamp. The thumbnails that are returned through this endpoint are extracted from our cloud services as opposed to the camera itself. With that in mind, cameras will send a thumbnail every 20 seconds to our backend with an additional thumbnail sent if motion is detected during those 20 seconds. The returned thumbnail's associated timestamp will be as close as possible to the user-specified timestamp but may differ by up to 10 seconds (when no motion has been detected).\n\nThe call to the Get Thumbnail Image API endpoint returns the binary data of a JPEG image. Users can utilize standard image processing tools or libraries to decode and display the received binary data."
							},
							"response": []
						},
						{
							"name": "Get Latest Thumbnail Image",
							"id": "13bad0a0-6283-42dd-a6cb-e36d9a5c6693",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/footage/thumbnails/latest?camera_id={{camera_id}}&resolution=hi-res",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"footage",
										"thumbnails",
										"latest"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "resolution",
											"value": "hi-res",
											"description": "An enumeration.  \"low-res\" or \"hi-res\".  Default: \"low-res\""
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getthumbnaillatestviewv1](https://apidocs.verkada.com/reference/getthumbnaillatestviewv1)\n\nReturns the latest thumbnail from a specified camera in either low resolution or high resolution.\n\nThe Get Latest Thumbnail Image API endpoint provides users with the capability to automatically retrieve the most recent thumbnail captured by cameras within their Command organization. To utilize this endpoint, users need to provide a camera ID.\n\nSimilar to the Get Thumbnail Image API, the thumbnails retrieved through this endpoint are sourced from our cloud services rather than directly from the camera. Cameras transmit thumbnails to our backend approximately every 20 seconds, with an additional thumbnail sent if motion is detected during that timeframe. When making a call to this endpoint, the returned thumbnail will have an associated timestamp as close as possible to the latest recorded footage. However, due to the asynchronous nature of thumbnail transmission, there may be a variance of up to 10 seconds when no motion is detected.\n\nUpon calling the Get Latest Thumbnail Image API, users will receive the binary data of a JPEG image. Decoding and displaying this binary data can be accomplished using standard image processing tools or libraries."
							},
							"response": []
						},
						{
							"name": "Get Thumbnail Link",
							"id": "db6a5582-bf19-4ed0-8e1a-b1c31ea11ace",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/footage/thumbnails/link?camera_id={{camera_id}}",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"footage",
										"thumbnails",
										"link"
									],
									"query": [
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "timestamp",
											"value": "",
											"description": "The timestamp when thumbnail was captured. Formatted as a Unix timestamp in seconds. Defaults to the current time.",
											"disabled": true
										},
										{
											"key": "expiry",
											"value": "",
											"description": "The expiry duration for the generated link. Formatted as a Unix timestamp in seconds. Defaults to one day.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getthumbnailimageviewv1](https://apidocs.verkada.com/reference/getthumbnailimageviewv1)\n\nReturns a link to thumbnail image from a specified camera at a specified time.\n\nThe Get Thumbnail Link API endpoint allows users to extract thumbnail links from cameras within their Command organization by inputting a camera ID as well as a Unix timestamp in seconds.\n\nIt is important to note that although users must specify a timestamp at which to retrieve the specific image, the returned link's image may not exactly match that timestamp. The thumbnails that are returned through this endpoint are extracted from our cloud services as opposed to the camera itself. With that in mind, cameras will send a thumbnail every 20 seconds to our backend with an additional thumbnail sent if motion is detected during those 20 seconds. The thumbnail's associated timestamp will be as close as possible to the user-specified timestamp but may differ by up to 10 seconds (when no motion has been detected).\n\nThe call to the Get Thumbnail Image API endpoint returns the binary data of a JPEG image. Users can utilize standard image processing tools or libraries to decode and display the received binary data."
							},
							"response": []
						},
						{
							"name": "Get Streaming Token",
							"id": "a0ccabd7-3891-4530-ab92-ec2c36a58b51",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-streamingapi-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/footage/token?expiration=3600",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"footage",
										"token"
									],
									"query": [
										{
											"key": "expiration",
											"value": "3600",
											"description": "The expiration time duration, in seconds from the current timestamp, for which the JWT remains valid. The maximum allowable value is 3600 seconds. Once a token has expired, it is no longer functional for streaming footage.\n"
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getfootagetokenviewv1](https://apidocs.verkada.com/reference/getfootagetokenviewv1)\n\nThis is a prerequisite to stream live or historical footage. It returns a JWT (JSON Web Token) which is required to access the streaming endpoint. For detailed information on streaming footage, refer to [Stream Footage (Live or Historical)](https://apidocs.verkada.com/reference/getfootagestreamviewv1)."
							},
							"response": []
						},
						{
							"name": "Stream Footage (Live or Historical)",
							"id": "1204971e-c2b7-45f7-9403-54920a80c98b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-streamingapi-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/stream/cameras/v1/footage/stream/stream.m3u8?org_id={{org_id}}&camera_id={{camera_id}}&start_time=0&end_time=0&resolution=low_res&type=stream&jwt=insert_stream_JWT&codec=hevc",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"stream",
										"cameras",
										"v1",
										"footage",
										"stream",
										"stream.m3u8"
									],
									"query": [
										{
											"key": "org_id",
											"value": "{{org_id}}",
											"description": "** REQUIRED ** The unique identifier of the organization."
										},
										{
											"key": "camera_id",
											"value": "{{camera_id}}",
											"description": "** REQUIRED ** The unique identifier of the camera."
										},
										{
											"key": "start_time",
											"value": "0",
											"description": "The start time of the video stream on a specified camera. Formatted as epoch time in seconds. For live footage stream, set to 0. For history footage stream, start_time - end_time should be less than or equal to 3600. Default: 0"
										},
										{
											"key": "end_time",
											"value": "0",
											"description": "The end time of the video stream on a specified camera. Formatted as epoch time in seconds. For live footage stream, set to 0. For history footage stream, start_time - end_time should be less than or equal to 3600. Default: 0"
										},
										{
											"key": "resolution",
											"value": "low_res",
											"description": "The resolution of the video stream. For live video stream, set to high_res for the high resolution stream, and set to low_res for the low resolution stream. For history video streaming, set to high_res for a mix of low and high resolution video stream with high resolution footage prioritized when available and set to low_res for only low resolution footage. Default: low_res"
										},
										{
											"key": "type",
											"value": "stream",
											"description": "The video type. This parameter is reserved for solely future compatibility. Set to stream. Default: stream"
										},
										{
											"key": "jwt",
											"value": "insert_stream_JWT",
											"description": "A short lived token that will be used to verify the permission to stream live or history footage from the camera. This can be acquired with the Get Streaming Token endpoint."
										},
										{
											"key": "codec",
											"value": "hevc",
											"description": "The codec used for the video stream. Default: hevc"
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getfootagestreamviewv1](https://apidocs.verkada.com/reference/getfootagestreamviewv1)\n\nAlthough many Verkada customers access camera footage via Command, we offer a flexible solution for integrating third-party applications with Verkada cameras. Streaming API allows users to stream both live and historical footage from cameras using the [HLS (HTTP Live Streaming) protocol](https://developer.apple.com/streaming/). HLS is an open protocol designed for streaming media content over the internet, supported by many video players. This document serves as a guide for integrating camera footage into third-party applications."
							},
							"response": []
						}
					],
					"id": "79c36069-3d9c-456a-81aa-8fced0dca7fc"
				},
				{
					"name": "People",
					"item": [
						{
							"name": "Delete a Person of Interest",
							"id": "3e1e311b-e6e8-490e-a2b8-ebf260353c16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/people/person_of_interest?person_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"people",
										"person_of_interest"
									],
									"query": [
										{
											"key": "person_id",
											"value": ""
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deletepersonofinterestviewv1](https://apidocs.verkada.com/reference/deletepersonofinterestviewv1)\n\nDeletes a Person of Interest from an organization using a specified person ID."
							},
							"response": []
						},
						{
							"name": "Get All Person of Interest",
							"id": "41ac4127-d110-4e82-ba1b-756d645d33cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/people/person_of_interest",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"people",
										"person_of_interest"
									],
									"query": [
										{
											"key": "page_size",
											"value": null,
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": null,
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getpersonofinterestviewv1](https://apidocs.verkada.com/reference/getpersonofinterestviewv1)\n\nReturns the time of creation, label, last time seen, and person ID for each Person of Interest for an organization."
							},
							"response": []
						},
						{
							"name": "Update a Person of Interest",
							"id": "58ce7c52-6a22-4972-9f09-18b550148b68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"\" // The name/label of the Person of Interest.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/cameras/v1/people/person_of_interest?person_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"cameras",
										"v1",
										"people",
										"person_of_interest"
									],
									"query": [
										{
											"key": "person_id",
											"value": ""
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/patchpersonofinterestviewv1](https://apidocs.verkada.com/reference/patchpersonofinterestviewv1)\n\nUpdates a label of Person of Interest for an organization using a specified person ID."
							},
							"response": []
						},
						{
							"name": "Create a Person of Interest",
							"id": "d248cbde-3791-454b-944a-7fab4fd28202",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base64_image\": \"\", // The base64 encoded string of the face image of the Person of Interest.\n    \"label\": \"\" // The name/label of the Person of Interest.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/cameras/v1/people/person_of_interest",
								"description": "[https://apidocs.verkada.com/reference/getpersonofinterestviewv1](https://apidocs.verkada.com/reference/getpersonofinterestviewv1)\n\nCreates a Person of Interest for an organization using a specified base64 encoded string of face image and label."
							},
							"response": []
						}
					],
					"id": "c1f20ba4-f345-496d-927e-4d393e123f1f"
				}
			],
			"id": "134dddd1-cb27-42e8-b5df-457eade40b18"
		},
		{
			"name": "Core API",
			"item": [
				{
					"name": "Audit Log",
					"item": [
						{
							"name": "Get Audit Logs",
							"id": "8eeeea80-4cb7-42fd-8020-6bffc1cd6627",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/core/v1/audit_log",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"core",
										"v1",
										"audit_log"
									],
									"query": [
										{
											"key": "start_time",
											"value": null,
											"description": "The start of time range for requested audit logs. Formatted as a Unix timestamp in seconds. Defaults to an hour from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": null,
											"description": "The end of time range for requested audit logs. Formatted as a Unix timestamp in seconds. Defaults to the current time.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": null,
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": null,
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getauditlogsviewv1](https://apidocs.verkada.com/reference/getauditlogsviewv1)\n\nReturns audit logs for an organization within a specified time range.\n\nAll audit logs include a timestamp in ISO 8601 date time format, user info, IP address, event info and device info."
							},
							"response": []
						}
					],
					"id": "c6b94d3b-4157-42fa-8a50-d06dc90eca2a"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Delete User",
							"id": "3437c8f5-3cc8-42a0-b05a-a382a68a997a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/core/v1/user?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"core",
										"v1",
										"user"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": null,
											"description": "A unique identifier managed externally provided by the consumer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deleteuserviewv1](https://apidocs.verkada.com/reference/deleteuserviewv1)\n\nDeletes a user for an organization based on either provided user ID or an external ID set during creation."
							},
							"response": []
						},
						{
							"name": "Get User",
							"id": "b180f641-625d-46c5-88cb-e23fc39ee361",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/core/v1/user?user_id=&external_id",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"core",
										"v1",
										"user"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": null,
											"description": "A unique identifier managed externally provided by the consumer."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getuserviewv1](https://apidocs.verkada.com/reference/getuserviewv1)\n\nReturns a user for an organization based on either provided user ID or an external ID set during creation."
							},
							"response": []
						},
						{
							"name": "Create User",
							"id": "58b38601-b79f-46e2-80f4-0f82c7e046d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"company_name\": \"\",\n  \"department\": \"\",\n  \"department_id\": \"\",\n  \"email\": \"\",\n  \"employee_id\": \"\",\n  \"employee_type\": \"\",\n  \"external_id\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"middle_name\": \"\",\n  \"phone\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/core/v1/user",
								"description": "[https://apidocs.verkada.com/reference/postuserviewv1](https://apidocs.verkada.com/reference/postuserviewv1)\n\nCreates a user for in an organization. External ID required. Otherwise, the newly created user will contain a user ID which can be used for identification."
							},
							"response": []
						},
						{
							"name": "Update User",
							"id": "1c7651c8-203d-49c3-93b9-0e81a51e48f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"company_name\": \"\",\n  \"department\": \"\",\n  \"department_id\": \"\",\n  \"email\": \"\",\n  \"employee_id\": \"\",\n  \"employee_type\": \"\",\n  \"external_id\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"middle_name\": \"\",\n  \"phone\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/core/v1/user?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"core",
										"v1",
										"user"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": null,
											"description": "A unique identifier managed externally provided by the consumer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putuserviewv1](https://apidocs.verkada.com/reference/putuserviewv1)\n\nUpdates a user's metadata for an organization based on either provided user ID or an external ID set during creation."
							},
							"response": []
						}
					],
					"id": "549658f5-0047-4a00-b551-b32a9eca7cdb",
					"description": "[https://apidocs.verkada.com/reference/external-id-introduction](https://apidocs.verkada.com/reference/external-id-introduction)\n\n[https://apidocs.verkada.com/reference/command-user-object](https://apidocs.verkada.com/reference/command-user-object)"
				}
			],
			"id": "eb3bf369-1ed7-4857-a3b0-37575ad43e85"
		},
		{
			"name": "Access API",
			"item": [
				{
					"name": "Access Groups",
					"item": [
						{
							"name": "Get All Access Groups",
							"id": "d85e3fd8-0f95-41f7-81d0-754c3162d5af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://{{region}}.verkada.com/access/v1/access_groups",
								"description": "[https://apidocs.verkada.com/reference/getaccessgroupsviewv1](https://apidocs.verkada.com/reference/getaccessgroupsviewv1)"
							},
							"response": []
						},
						{
							"name": "Get Access Group",
							"id": "9464abb5-29ec-4bbd-86a3-86414668cb76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_groups/group?group_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_groups",
										"group"
									],
									"query": [
										{
											"key": "group_id",
											"value": ""
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getaccessgroupviewv1](https://apidocs.verkada.com/reference/getaccessgroupviewv1)"
							},
							"response": []
						},
						{
							"name": "Delete Access Group",
							"id": "bc68eb6f-357b-479d-a3ad-259b0ae10b02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_groups/group?group_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_groups",
										"group"
									],
									"query": [
										{
											"key": "group_id",
											"value": ""
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deleteaccessgroupviewv1](https://apidocs.verkada.com/reference/deleteaccessgroupviewv1)"
							},
							"response": []
						},
						{
							"name": "Create Access Group",
							"id": "6e952df8-7bac-434b-9b7e-7deaad6653db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/access/v1/access_groups/group",
								"description": "[https://apidocs.verkada.com/reference/postaccessgroupviewv1](https://apidocs.verkada.com/reference/postaccessgroupviewv1)"
							},
							"response": []
						},
						{
							"name": "Remove User from Access Group",
							"id": "c3b31c33-fbff-4130-84e4-41d9e761bb71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_groups/group/user?group_id=&user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_groups",
										"group",
										"user"
									],
									"query": [
										{
											"key": "group_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Group managed by Verkada."
										},
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": null,
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deleteaccessgroupuserviewv1](https://apidocs.verkada.com/reference/deleteaccessgroupuserviewv1)"
							},
							"response": []
						},
						{
							"name": "Add User to Access Group",
							"id": "3eb9395d-c2c9-4f70-b3cd-4f00b0367ef5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  //\"external_id\": \"\"\n  \"user_id\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_groups/group/user?group_id=0d620b08-dadb-442e-8bde-55afbdeddbbb",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_groups",
										"group",
										"user"
									],
									"query": [
										{
											"key": "group_id",
											"value": "0d620b08-dadb-442e-8bde-55afbdeddbbb",
											"description": "** REQUIRED ** The unique identifier of the Access Group managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccessgroupuserviewv1](https://apidocs.verkada.com/reference/putaccessgroupuserviewv1)"
							},
							"response": []
						}
					],
					"id": "2b7e479a-f067-49f3-9619-97f121597de7"
				},
				{
					"name": "Access User Information",
					"item": [
						{
							"name": "Get All Access Users",
							"id": "0b0d76cd-731d-4b41-a7b2-76dc469e1378",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://{{region}}.verkada.com/access/v1/access_users",
								"description": "[https://apidocs.verkada.com/reference/getaccessmembersviewv1](https://apidocs.verkada.com/reference/getaccessmembersviewv1)"
							},
							"response": []
						},
						{
							"name": "Get Access Information Object",
							"id": "7bf7ea91-ab42-4013-9bae-1d7e58d73bfa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getaccessuserviewv1](https://apidocs.verkada.com/reference/getaccessuserviewv1)"
							},
							"response": []
						},
						{
							"name": "Send Pass App Invite for User",
							"id": "e87a9d66-dfa3-4abb-b6d6-f5673a51e9dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/pass/invite?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"pass",
										"invite"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/postsendpassappinviteviewv1](https://apidocs.verkada.com/reference/postsendpassappinviteviewv1)"
							},
							"response": []
						},
						{
							"name": "Set End Date for User",
							"id": "72f745c9-22e6-4090-aefa-4be144c215d7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"end_date\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/end_date?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"end_date"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccessenddateviewv1](https://apidocs.verkada.com/reference/putaccessenddateviewv1)"
							},
							"response": []
						},
						{
							"name": "Set Start Date for User",
							"id": "6ecd0625-786f-445a-b31e-26c34b901dae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start_date\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/start_date?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"start_date"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccessstartdateviewv1](https://apidocs.verkada.com/reference/putaccessstartdateviewv1)"
							},
							"response": []
						},
						{
							"name": "Remove Entry Code for User",
							"id": "58c94f47-4f53-4ea5-a2bb-9dcfc9c4e7bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/entry_code?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"entry_code"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deleteaccessuserpinviewv1](https://apidocs.verkada.com/reference/deleteaccessuserpinviewv1)"
							},
							"response": []
						},
						{
							"name": "Set Entry Code for User",
							"id": "7dedd35c-be3d-4ab8-b8f4-8a7c1e26e46a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entry_code\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/entry_code?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"entry_code"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "override",
											"value": null,
											"description": "The flag that states whether or not the client wants to apply the given entry code to the given user even if the entry code is already in use by another user. This will reset the other user's entry code.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccessuserpinviewv1](https://apidocs.verkada.com/reference/putaccessuserpinviewv1)"
							},
							"response": []
						},
						{
							"name": "Activate BLE for Access User",
							"id": "6bce6054-516b-45af-bd7a-22734648f248",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/ble/activate?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"ble",
										"activate"
									],
									"query": [
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putactivateblemethodviewv1](https://apidocs.verkada.com/reference/putactivateblemethodviewv1)"
							},
							"response": []
						},
						{
							"name": "Activate Remote Unlock for User",
							"id": "2fa6046b-09eb-4e42-9bc1-e5101f615e5c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/remote_unlock/activate?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"remote_unlock",
										"activate"
									],
									"query": [
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putactivateremoteunlockviewv1](https://apidocs.verkada.com/reference/putactivateremoteunlockviewv1)"
							},
							"response": []
						},
						{
							"name": "Deactivate Remote Unlock for User",
							"id": "a33ade76-966c-4599-9812-9cd3baff2869",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/remote_unlock/deactivate?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"remote_unlock",
										"deactivate"
									],
									"query": [
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putdeactivateremoteunlockviewv1](https://apidocs.verkada.com/reference/putdeactivateremoteunlockviewv1)"
							},
							"response": []
						},
						{
							"name": "Deactivate BLE for Access User",
							"id": "d1611a63-3900-471a-a5f0-a5f3159e7248",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/access_users/user/ble/deactivate?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"access_users",
										"user",
										"ble",
										"deactivate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putdeactivateblemethodviewv1](https://apidocs.verkada.com/reference/putdeactivateblemethodviewv1)"
							},
							"response": []
						}
					],
					"id": "860de524-c8d4-4da9-bfe2-731eaddd66ca"
				},
				{
					"name": "Access Credentials",
					"item": [
						{
							"name": "Delete Access Card",
							"id": "6bb15483-9c3c-4a65-a167-5e3f803a83f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/card?user_id=&card_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"card"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "card_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deleteaccesscardviewv1](https://apidocs.verkada.com/reference/deleteaccesscardviewv1)"
							},
							"response": []
						},
						{
							"name": "Activate Access Card",
							"id": "4087b44a-0b74-498e-b529-4add4bf7e5c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/card/activate?user_id=&card_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"card",
										"activate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "card_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccesscardactivateviewv1](https://apidocs.verkada.com/reference/putaccesscardactivateviewv1)"
							},
							"response": []
						},
						{
							"name": "Deactivate Access Card",
							"id": "1e2062cb-435d-4e5c-9031-68923563f69e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/card/deactivate?user_id=&card_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"card",
										"deactivate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "card_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putaccesscarddeactivateviewv1](https://apidocs.verkada.com/reference/putaccesscarddeactivateviewv1)"
							},
							"response": []
						},
						{
							"name": "Deactivate License Plate",
							"id": "214a96a2-1810-40b1-a472-1bfcc6cabb11",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/license_plate/deactivate?user_id=&license_plate_number=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"license_plate",
										"deactivate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "license_plate_number",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putlicenseplatedeactivateviewv1](https://apidocs.verkada.com/reference/putlicenseplatedeactivateviewv1)"
							},
							"response": []
						},
						{
							"name": "Delete License Plate from User",
							"id": "7f491be8-312a-44c9-85a9-65e74aa9f5fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/license_plate?user_id=&license_plate_number=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"license_plate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "license_plate_number",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/deletelicenseplateviewv1](https://apidocs.verkada.com/reference/deletelicenseplateviewv1)"
							},
							"response": []
						},
						{
							"name": "Activate License Plate",
							"id": "f5500d8b-1dfb-4dc7-85f8-6901762a1bf9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/license_plate/activate?user_id=&license_plate_number=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"license_plate",
										"activate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										},
										{
											"key": "license_plate_number",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Access Card managed by Verkada."
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/putlicenseplateactivateviewv1](https://apidocs.verkada.com/reference/putlicenseplateactivateviewv1)"
							},
							"response": []
						},
						{
							"name": "Add Card to User",
							"id": "6c9e6c3f-656b-494b-b7d2-c4aec1c46aea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  // Bool value specifying if the credential is currently active. Can be True or False. Default value is False.\n  \"active\": true,\n  // The card number used to grant or deny access to a door.\n  \"card_number\": \"\",\n  // The facility code used to grant or deny access to a door.\n  \"facility_code\": \"\",\n  // The type of card used by Verkada to interpret raw credential information.\n  \"type\": \"\"\n  // The card number in base36 used to grant or deny access to a door.\n  //\"card_number_base36\": \"\",\n  // The card number in hexadecimal used to grant or deny access to a door.\n  //\"card_number_hex\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/card?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"card"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/postaccesscardviewv1](https://apidocs.verkada.com/reference/postaccesscardviewv1)"
							},
							"response": []
						},
						{
							"name": "Add License Plate to User",
							"id": "61cb41e8-a457-475d-a46f-962eabe54d40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  // Bool value specifying if the license plate credential is currently active. Default value is False.\n  \"active\": true,\n  // ** REQUIRED ** The unique license plate number identifying a license plate credential for a user.\n  \"license_plate_number\": \"\",\n  //The name to be given to the license plate credential.\n  \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/credentials/license_plate?user_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"credentials",
										"license_plate"
									],
									"query": [
										{
											"key": "user_id",
											"value": "",
											"description": "The unique identifier of the user managed by Verkada."
										},
										{
											"key": "external_id",
											"value": "",
											"description": "A unique identifier managed externally provided by the customer.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/postlicenseplateviewv1](https://apidocs.verkada.com/reference/postlicenseplateviewv1)"
							},
							"response": []
						}
					],
					"id": "b22be8e3-3450-4104-9d6e-bf53bec56a38"
				},
				{
					"name": "Access Doors",
					"item": [
						{
							"name": "Get Doors",
							"id": "88bdaa1c-061e-49ad-8b6e-0ab2667d3f49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									},
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/access/v1/doors",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"access",
										"v1",
										"doors"
									],
									"query": [
										{
											"key": "site_ids",
											"value": "",
											"description": "A list of Verkada site_ids to control which doors are returned.",
											"disabled": true
										},
										{
											"key": "door_ids",
											"value": "",
											"description": "A list of Verkada door_ids to control which doors are returned.",
											"disabled": true
										}
									]
								},
								"description": "TBD"
							},
							"response": []
						},
						{
							"name": "User Door Unlock",
							"id": "91f4b8df-0394-466d-921e-301e8b6be3fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": \"\", // The unique identifier of the user managed by Verkada.\n    \"door_id\": \"\" // The unique identifier managed externally provided by the customer.\n    // \"external_id\": \"\" An externally defined unique identifier provided by the customer.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/access/v1/door/user_unlock",
								"description": "TBD"
							},
							"response": []
						},
						{
							"name": "Admin Door Unlock",
							"id": "4166b72b-3a82-4346-835d-d16b502c78c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"door_id\": \"\" //The UUID of the door to unlock.\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://{{region}}.verkada.com/access/v1/door/admin_unlock",
								"description": "TBD"
							},
							"response": []
						}
					],
					"id": "43c4a99f-59d0-41af-8cf7-6a06b4e3c983"
				}
			],
			"id": "8fa17889-a008-4e45-a586-311136dc4f9e",
			"description": "[https://apidocs.verkada.com/reference/access-user-guide](https://apidocs.verkada.com/reference/access-user-guide)"
		},
		{
			"name": "Sensor API",
			"item": [
				{
					"name": "Alerts",
					"item": [
						{
							"name": "Get Sensor Alerts",
							"id": "8127c531-6f07-4a7e-856d-870cb4af6b75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/environment/v1/alerts?device_ids=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"environment",
										"v1",
										"alerts"
									],
									"query": [
										{
											"key": "device_ids",
											"value": "",
											"description": "** REQUIRED ** A comma separated list of sensor IDs."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for requested alerts. Formatted as a Unix timestamp in seconds. Default value is an hour from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": null,
											"description": "The end of the time range for requested alerts. Formatted in Unix timestamp in seconds. Default value is the current time.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": null,
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": null,
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "fields",
											"value": null,
											"description": "Retrieves alerts only for the given fields.  Fields must be one or multiple comma separated values from humidity, motion, noise_level, pm_2_5, pm_4_0, pm_1_0_0, tamper, temperature, tvoc(SV11), usa_air_quality_index, vape_index, carbon_dioxide, carbon_monoxide, barometric_pressure, formaldehyde, ambient_light, tvoc_index(SV23/SV25).  If left blank, alerts of all sensor types will be returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getsensoralertsviewv1](https://apidocs.verkada.com/reference/getsensoralertsviewv1)"
							},
							"response": []
						}
					],
					"id": "4b59fc81-3d40-493a-a512-c095987e299f"
				},
				{
					"name": "Data",
					"item": [
						{
							"name": "Get Sensor Data",
							"id": "38ce371d-fffb-42c7-9312-10131df8cf31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/environment/v1/data?device_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"environment",
										"v1",
										"data"
									],
									"query": [
										{
											"key": "device_id",
											"value": "",
											"description": "** REQUIRED ** A comma separated list of sensor IDs."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "The start of the time range for requested alerts. Formatted as a Unix timestamp in seconds. Default value is an hour from the current time.",
											"disabled": true
										},
										{
											"key": "end_time",
											"value": "",
											"description": "The end of the time range for requested alerts. Formatted in Unix timestamp in seconds. Default value is the current time.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "",
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "",
											"description": "Retrieves alerts only for the given fields.  Fields must be one or multiple comma separated values from humidity, motion, noise_level, pm_2_5, pm_4_0, pm_1_0_0, tamper, temperature, tvoc(SV11), usa_air_quality_index, vape_index, carbon_dioxide, carbon_monoxide, barometric_pressure, formaldehyde, ambient_light, tvoc_index(SV23/SV25).  If left blank, alerts of all sensor types will be returned in the response.",
											"disabled": true
										},
										{
											"key": "interval",
											"value": null,
											"description": "The time interval for the requested sensor data. Data is stored with 1 second intervals for 30 days, and with 5 minute intervals for data between 30 days and 365 days old. A valid value for this field is a number followed by a supported format. Supported formats are s, m, and h for seconds, minutes, and hours, respectively. For example, 5m would specify a 5 minutes interval for the data. If left blank, a default resolution will be calculated based on time range.",
											"type": "text",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getsensordataviewv1](https://apidocs.verkada.com/reference/getsensordataviewv1)"
							},
							"response": []
						}
					],
					"id": "09bd52a3-495c-4f3d-981e-fb9faa2bf0ba"
				}
			],
			"id": "bdedd8a5-c540-458a-9297-aa85578224c4"
		},
		{
			"name": "Guest API",
			"item": [
				{
					"name": "Sites",
					"item": [
						{
							"name": "Get Guest Sites",
							"id": "539a8e9c-77df-49da-b6f0-3a755ca1c5f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": "https://{{region}}.verkada.com/guest/v1/sites",
								"description": "[https://apidocs.verkada.com/reference/getguestsiteview](https://apidocs.verkada.com/reference/getguestsiteview)"
							},
							"response": []
						}
					],
					"id": "333554b8-f708-4400-b0ba-59462b5b0718"
				},
				{
					"name": "Visits",
					"item": [
						{
							"name": "Get Guest Visits",
							"id": "66db5eb0-acba-4880-8b7b-338330343c97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/guest/v1/visits?site_id=&start_time=&end_time=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"guest",
										"v1",
										"visits"
									],
									"query": [
										{
											"key": "site_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the Guest site. Valid sites can be retrieved with the Guest Site API."
										},
										{
											"key": "start_time",
											"value": "",
											"description": "** REQUIRED ** The start of the time range for requested visits. Formatted as a UNIX timestamp. Must be at most one day away from end_time."
										},
										{
											"key": "end_time",
											"value": "",
											"description": "** REQUIRED ** The end of the time range for requested visits. Formatted as a UNIX timestamp. Must be at most one day away from start_time."
										},
										{
											"key": "page_token",
											"value": null,
											"description": "The pagination token used to fetch the next page of results.",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": null,
											"description": "The number of items returned in a single response. Default is 100. Max is 200.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getvisitview](https://apidocs.verkada.com/reference/getvisitview)"
							},
							"response": []
						}
					],
					"id": "ec6d636a-d1aa-4a35-b225-cb72580a03f1"
				}
			],
			"id": "03892534-9641-4034-a2e5-acc98db75bdc"
		},
		{
			"name": "Alarm API",
			"item": [
				{
					"name": "Sites",
					"item": [
						{
							"name": "Get Site Information",
							"id": "89b18257-fc36-4033-ad7e-026dd7b56afd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/alarms/v1/sites",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"alarms",
										"v1",
										"sites"
									],
									"query": [
										{
											"key": "site_ids",
											"value": "",
											"description": "A comma delimited list of site unique identifiers. If not supplied, will return information on all sites.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getalarmssitesviewv1](https://apidocs.verkada.com/reference/getalarmssitesviewv1)"
							},
							"response": []
						}
					],
					"id": "11269624-c327-419c-912c-9d9d3afa1dbd"
				},
				{
					"name": "Devices",
					"item": [
						{
							"name": "Get Alarm Devices",
							"id": "409e7e03-af4f-47e9-9135-427deca665db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									},
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{region}}.verkada.com/alarms/v1/devices?site_id=",
									"protocol": "https",
									"host": [
										"{{region}}",
										"verkada",
										"com"
									],
									"path": [
										"alarms",
										"v1",
										"devices"
									],
									"query": [
										{
											"key": "site_id",
											"value": "",
											"description": "** REQUIRED ** The unique identifier of the site"
										},
										{
											"key": "device_ids",
											"value": null,
											"description": "A comma delimited list of device unique identifiers. If not supplied, all devices in the site will be returned.",
											"disabled": true
										}
									]
								},
								"description": "[https://apidocs.verkada.com/reference/getalarmsdevicesviewv1](https://apidocs.verkada.com/reference/getalarmsdevicesviewv1)"
							},
							"response": []
						}
					],
					"id": "10e9ca7f-c473-443a-82f1-391e4ebfc82c"
				}
			],
			"id": "b1056a28-df4e-4bc8-829a-fa639836847a"
		},
		{
			"name": "Events API",
			"item": [
				{
					"name": "Get Events",
					"id": "29f0962e-a443-4823-ad12-6e52eafcac06",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{region}}.verkada.com/events/v1/access",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"events",
								"v1",
								"access"
							],
							"query": [
								{
									"key": "start_time",
									"value": "",
									"description": "The start of the time range for requested events. Formatted as a Unix timestamp in seconds. Default value is an hour ago from the current time.",
									"disabled": true
								},
								{
									"key": "end_time",
									"value": null,
									"description": "The end of the time range for requested events. Formatted as a Unix timestamp in seconds. Default value is the current time.",
									"disabled": true
								},
								{
									"key": "page_token",
									"value": null,
									"description": "The pagination token used to fetch the next page of results.",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": null,
									"description": "The number of items returned in a single response. Default is 100. Max is 200.",
									"disabled": true
								},
								{
									"key": "event_type",
									"value": null,
									"description": "One or multiple comma separated values from door_opened, door_rejected, door_granted, door_forced_open, door_held_open, door_tailgating, door_crowd_detection, door_tamper, door_poi_detection, door_initialized, door_armed, door_armed_button_pressed, door_aux_unlock, door_locked, door_unlocked, door_closed, door_unarmed_event, door_code_entered_event, door_button_press_entered_event, door_acu_startup, door_lock_state_changed, door_lockdown, door_auxinput_change_state, door_auxinput_held, door_low_battery, door_critical_battery, door_user_database_corrupt, door_keycard_entered_accepted, door_keycard_entered_rejected, door_code_entered_accepted, door_code_entered_rejected, door_remote_unlock_accepted, door_remote_unlock_rejected, door_press_to_exit_accepted, door_ble_unlock_attempt_accepted, door_ble_unlock_attempt_rejected, door_acu_offline, door_fire_alarm_triggered, door_fire_alarm_released, door_acu_fire_alarm_triggered, door_acu_fire_alarm_released, door_schedule_toggle, door_lockdown_debounced, door_lp_presented_accepted, door_lp_presented_rejected, door_apb_double_entry, door_apb_double_exit, all_access_granted, all_access_rejected, door_auxoutput_activated.door_auxoutput_deactivated.",
									"disabled": true
								},
								{
									"key": "site_id",
									"value": null,
									"description": "One or multiple comma separated values of site identifiers.",
									"disabled": true
								},
								{
									"key": "device_id",
									"value": null,
									"description": "One or multiple comma separated values of device identifiers.",
									"disabled": true
								},
								{
									"key": "user_id",
									"value": null,
									"description": "One or multiple comma separated values of user identifiers.",
									"disabled": true
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/getviewingstationdevicesviewv1](https://apidocs.verkada.com/reference/getviewingstationdevicesviewv1)"
					},
					"response": []
				}
			],
			"id": "5837aac3-9778-4cc5-b9cb-32a24ffe1b81"
		},
		{
			"name": "Viewing Station API",
			"item": [
				{
					"name": "Get Viewing Station Devices",
					"id": "8f97ff5f-f7fb-4cfd-8f4e-fb46e71453c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "https://{{region}}.verkada.com/viewing_station/v1/devices",
						"description": "[https://apidocs.verkada.com/reference/getviewingstationdevicesviewv1](https://apidocs.verkada.com/reference/getviewingstationdevicesviewv1)"
					},
					"response": []
				}
			],
			"id": "4506d384-6fb5-4b17-8bfd-39d7979bbb4b"
		},
		{
			"name": "Verkada Helix API",
			"item": [
				{
					"name": "Create a Helix Event",
					"id": "d5ddea9a-d5e5-44db-8c02-79bc55f3650d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  // ** REQUIRED ** List of event attributes.\n  \"attributes\": {\n    \"field1\": \"this is a string\",\n    \"field2\": 123,\n    \"field3\": 123.456,\n    \"field4\": true\n  },\n  \n  // Whether or not an event is flagged.\n  \"flagged\": false,\n  \n  // ** REQUIRED ** The unique identifier of the camera.\n  \"camera_id\": \"[camera_id]\",\n  \n  // ** REQUIRED ** The unique identifier of the event type.\n  \"event_type_uid\": \"[event_type_uid]\",\n  \n  // ** REQUIRED ** The event epoch time in milliseconds.\n  \"time_ms\": \n}\n"
						},
						"url": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event",
						"description": "[https://apidocs.verkada.com/reference/postvideotaggingeventviewv1](https://apidocs.verkada.com/reference/postvideotaggingeventviewv1)"
					},
					"response": []
				},
				{
					"name": "Search for Helix Events",
					"id": "a52586d4-3d96-4c45-93f9-4587f7202556",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    //\"attribute_filters\": [ {\"field1\": \"New Value\"}]\n    \n    // Whether or not an event is flagged.\n    //\"flagged\": false,\n\n    // List of unique identifiers of cameras.  E.g. [\"cam_id1\",\"cam_id2\"]\n    //\"camera_ids\": [\"cam_id\"]\n\n    // The unique identifier of the event type.\n    //\"event_type_uid\": \"62623243-fc25-48f0-b78a-bcbf7a973f5d\"\n\n    //\"start_time_ms\": \n\n    // Query end epoch time in milliseconds.\n    //\"end_time_ms\": \n\n    // List of search keywords. E.g. [\"word1\",\"word2\"]\n    //\"keywords\": [\"\"]\n}\n"
						},
						"url": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event/search",
						"description": "[https://apidocs.verkada.com/reference/postvideotaggingeventsearchviewv1](https://apidocs.verkada.com/reference/postvideotaggingeventsearchviewv1)"
					},
					"response": []
				},
				{
					"name": "Update a Helix Event",
					"id": "704d1be4-f0a9-4ca3-9017-a95345b49aac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  // List of event attributes.\n  \"attributes\": {\n    \"field1\": \"this is a string value\",\n    \"field2\": 1234,\n    \"field3\": 123.4567,\n    \"field4\": false\n  },\n  // Whether or not an event is flagged. true/false\n  \"flagged\": false\n}\n"
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event?camera_id=&event_type_uid=&time_ms=",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event"
							],
							"query": [
								{
									"key": "camera_id",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the camera."
								},
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The event epoch time in milliseconds."
								},
								{
									"key": "time_ms",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type."
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/patchvideotaggingeventviewv1](https://apidocs.verkada.com/reference/patchvideotaggingeventviewv1)"
					},
					"response": []
				},
				{
					"name": "Update a Helix Event Type",
					"id": "4a85707e-61fd-4839-bf68-4c9320d866e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  // The schema of the event type.\n  \"event_schema\": {\n    \"field2\": \"string\",\n    \"field1\": \"string\",\n    \"field3\": \"integer\",\n    \"field4\": \"float\",\n    \"field5\": \"boolean\"\n  },\n  // The name of the event type.\n  \"name\": \"Test123\"\n}"
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event_type?event_type_uid=",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event_type"
							],
							"query": [
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type."
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/patchvideotaggingeventtypeviewv1](https://apidocs.verkada.com/reference/patchvideotaggingeventtypeviewv1)"
					},
					"response": []
				},
				{
					"name": "Create a Helix Event Type",
					"id": "299619b0-85b1-49cd-8971-5cc4600109eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  // The schema of the event type.\n  \"event_schema\": {\n    \"field1\": \"string\",\n    \"field2\": \"integer\",\n    \"field3\": \"float\",\n    \"field4\": \"boolean\"\n  },\n  // The name of the event type.\n  \"name\": \"[Event Type Name]\"\n}\n"
						},
						"url": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event_type",
						"description": "[https://apidocs.verkada.com/reference/postvideotaggingeventtypeviewv1](https://apidocs.verkada.com/reference/postvideotaggingeventtypeviewv1)"
					},
					"response": []
				},
				{
					"name": "Delete a Helix Event Type",
					"id": "1971ecca-9229-4076-8885-7caaf18cae9f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event_type?event_type_uid=",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event_type"
							],
							"query": [
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type."
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/deletevideotaggingeventtypeviewv1](https://apidocs.verkada.com/reference/deletevideotaggingeventtypeviewv1)"
					},
					"response": []
				},
				{
					"name": "Delete a Helix Event",
					"id": "461127fd-cb74-455a-88e8-e094cfb87b1b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event?camera_id=&time_ms=&event_type_uid=",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event"
							],
							"query": [
								{
									"key": "camera_id",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the camera."
								},
								{
									"key": "time_ms",
									"value": "",
									"description": "** REQUIRED ** The event epoch time in milliseconds."
								},
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type."
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/deletevideotaggingeventviewv1](https://apidocs.verkada.com/reference/deletevideotaggingeventviewv1)"
					},
					"response": []
				},
				{
					"name": "Get a Helix Event",
					"id": "16a4ca27-b21f-4886-81d5-c0029688ba4b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event?camera_id=&time_ms=&event_type_uid=",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event"
							],
							"query": [
								{
									"key": "camera_id",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the camera."
								},
								{
									"key": "time_ms",
									"value": "",
									"description": "** REQUIRED ** The event epoch time in milliseconds."
								},
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type."
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/getvideotaggingeventviewv1](https://apidocs.verkada.com/reference/getvideotaggingeventviewv1)"
					},
					"response": []
				},
				{
					"name": "Get List of Helix Event Types",
					"id": "43271a58-cfff-4463-9859-5438aed2af46",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{region}}.verkada.com/cameras/v1/video_tagging/event_type",
							"protocol": "https",
							"host": [
								"{{region}}",
								"verkada",
								"com"
							],
							"path": [
								"cameras",
								"v1",
								"video_tagging",
								"event_type"
							],
							"query": [
								{
									"key": "event_type_uid",
									"value": "",
									"description": "** REQUIRED ** The unique identifier of the event type.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "[https://apidocs.verkada.com/reference/getvideotaggingeventtypeviewv1](https://apidocs.verkada.com/reference/getvideotaggingeventtypeviewv1)"
					},
					"response": []
				}
			],
			"id": "ba450788-0e76-4d73-b61f-380303aa203e",
			"description": "Verkada Helix is Verkada's search and integration engine. Using Helix, customers can pull transactional data from a variety of on-premise or cloud-based systems into Verkada Command. Helix then uses that data to index video footage by whatever attributes the customer needs. Finally, Helix provides flexible search tools to find just the right video.\n\n[https://apidocs.verkada.com/reference/overview-1](https://apidocs.verkada.com/reference/overview-1)"
		},
		{
			"name": "Webhook Models",
			"item": [
				{
					"name": "Access Events Webhooks",
					"item": [
						{
							"name": "Key Card Rejected Event",
							"id": "cc2988df-7159-49c7-adc4-cf8941cd25da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"a74fc6a6-4fc5-4e5c-88e5-57301683327a\",\n\t\"webhook_type\": \"notification\",\n\t\"created_at\": 1692131003,\n\t\"webhook_id\": \"457eb610-03b4-4fa0-a8c7-c06f3142df50\",\n\t\"data\": {\n\t\t\"device_id\": \"dd47e8e4-dc18-47d9-8249-4607eaa884dd\",\n\t\t\"created\": 1692131000,\n\t\t\"notification_type\": \"door_keycard_entered_rejected\",\n\t\t\"device_type\": \"access_control\",\n\t\t\"door_id\": \"dd47e8e4-dc18-47d9-8249-4607eaa884dd\",\n\t\t\"input_value\": \"151|39924\",\n\t\t\"aux_info\": null,\n\t\t\"user_info\": null,\n\t\t\"lockdown_info\": null,\n\t\t\"door_info\": null\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{your_webhook_listener}}"
							},
							"response": []
						},
						{
							"name": "Door Remote Unlock Accepted Event",
							"id": "e87796ac-b884-47f3-acb2-2039864f676a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"a74fc6a6-4fc5-4e5c-88e5-57301683327a\",\n\t\"webhook_type\": \"notification\",\n\t\"created_at\": 1692235651,\n\t\"webhook_id\": \"60a168de-df82-40bb-b31e-a7fd7c49d79d\",\n\t\"data\": {\n\t\t\"device_id\": \"a1faa47c-330a-45aa-8fe6-cacb293400c2\",\n\t\t\"created\": 1692235647,\n\t\t\"notification_type\": \"door_remote_unlock_accepted\",\n\t\t\"device_type\": \"access_control\",\n\t\t\"door_id\": \"a1faa47c-330a-45aa-8fe6-cacb293400c2\",\n\t\t\"input_value\": null,\n\t\t\"aux_info\": null,\n\t\t\"user_info\": {\n\t\t\"user_id\": \"47c39a50-3575-40ee-bfe9-46e0fa8447db\",\n\t\t\"name\": \"John Smith\",\n\t\t\"email\": \"j.smith@verkada.com\",\n\t\t\"first_name\": \"John\",\n\t\t\"last_name\": \"Smith\",\n\t\t\"phone\": \"+1234567890\"\n\t},\n\t\"lockdown_info\": null,\n\t\"door_info\": {\n\t\t\"acu_name\": \"Lobby Door Controller\",\n\t\t\"acu_id\": \"8adf16e0-a52a-45d1-8b68-efc5d6fb64ba\",\n\t\t\"name\": \"Front Door\"\n\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{your_webhook_listener}}"
							},
							"response": []
						}
					],
					"id": "b4156da8-f134-4f72-a687-fa6b9ad71ae5",
					"description": "[https://apidocs.verkada.com/reference/access-events-webhooks](https://apidocs.verkada.com/reference/access-events-webhooks)"
				},
				{
					"name": "Alarms Webhooks",
					"item": [
						{
							"name": "Alarm Site State Change",
							"id": "1f399295-4ddd-4641-93e6-11a2c3117b48",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"a96fec42-edee-4bb4-8457-a89b90d3d258\",\n\t\"webhook_type\": \"alarm_site_state_changed\",\n\t\"created_at\": 1685129790,\n\t\"webhook_id\": \"aa01db73-34ac-4b29-a50a-e2b52191825c\",\n\t\"data\": {\n\t\t\"event_type\": \"resolved\",\n\t\t\"timestamp\": 1685129786,\n\t\t\"site_id\": \"f53e3b84-e534-4de5-821c-5263d96d3623\",\n\t\t\"site_state\": \"disarmed\",\n\t\t\"site_name\": \"Office 1st Floor\",\n\t\t\"site_security_level\": \"custom\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{your_webhook_listener}}",
								"description": "[https://apidocs.verkada.com/reference/lpr](https://apidocs.verkada.com/reference/lpr)"
							},
							"response": []
						},
						{
							"name": "Alarm Event",
							"id": "44915dc8-a471-4cb0-bdfa-2b958fe0e2ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"c926e7d6-be46-4ae8-9e24-11ad5a52fb42\",\n\t\"webhook_type\": \"alarm_site_state_changed\",\n\t\"created_at\": 1685129775,\n\t\"webhook_id\": \"7c03289b-c80e-4766-ab58-e82c157c5990\",\n\t\"data\": {\n\t\t\"event_type\": \"alarm\",\n\t\t\"timestamp\": 1685129774,\n\t\t\"site_id\": \"f53e3b84-e534-4de5-821c-5263d96d3623\",\n\t\t\"site_state\": \"alarm\",\n\t\t\"site_name\": \"Office 1st Floor\",\n\t\t\"site_security_level\": \"custom\",\n\t\t\"device_name\": \"Reception Panic Button\",\n\t\t\"device_id\": \"013ac542-3152-4477-9f85-f28007c9227e\",\n\t\t\"device_event_type\": \"pressed\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{your_webhook_listener}}",
								"description": "[https://apidocs.verkada.com/reference/lpr](https://apidocs.verkada.com/reference/lpr)"
							},
							"response": []
						}
					],
					"id": "171b486b-4437-45f4-bdec-31f364c82e88"
				},
				{
					"name": "LPR Event",
					"id": "c03c84d5-2d8f-4029-b038-435effbc335a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"b9b576c4-ec47-4801-9720-4104d85147cb\",\n\t\"webhook_type\": \"lpr\",\n\t\"created_at\": 1602725490,\n\t\"webhook_id\": \"0302934a-9966-4df6-a39c-d7e7e5467244\",\n\t\"data\": {\n\t\t\"camera_id\": \"7a226fef-3636-4428-bb61-aa3e61c4abea\", \n\t\t\"created\": 1602725484,\n\t\t\"license_plate_number\": \"7NCR867\", \n\t\t\"confidence\": 0.85\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{your_webhook_listener}}",
						"description": "[https://apidocs.verkada.com/reference/lpr](https://apidocs.verkada.com/reference/lpr)"
					},
					"response": []
				},
				{
					"name": "Sensors Alert",
					"id": "74a957ea-9189-4301-983a-f3e0e7d19090",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t// Sample Webhook Object\n\t\"org_id\": \"3c85f39b-0d3d-4288-9c7e-cdec0b5b4ac5\",\n\t\"webhook_type\": \"sensor_alert\",\n\t\"created_at\": 1641230332,\n\t\"webhook_id\": \"bafdfe28-abcc-478c-a5cc-b465e293bc43\",\n\t\"data\": {\n\t\t\"alert_event_id\": \"e006ef1c-e039-43e0-88f5-093b17ccc2dc\",\n\t\t\"start_time\": 1641230330.845883,\n\t\t\"end_time\": null,\n\t\t\"most_extreme_value\": 38.725012367437245,\n\t\t\"is_above_max_event\": true,\n\t\t\"threshold\": 35,\n\t\t\"reading\": \"calibrated_temperature\",\n\t\t\"device_id\": \"e637120c-09bb-4601-a8bf-dcf54d46aece\",\n\t\t\"device_name\": \"Lobby Sensor\",\n\t\t\"device_serial\": \"JQ9E-R9CG-RF6X\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{your_webhook_listener}}",
						"description": "[https://apidocs.verkada.com/reference/sensor-alerts-webhook-object](https://apidocs.verkada.com/reference/sensor-alerts-webhook-object)"
					},
					"response": []
				}
			],
			"id": "7e01c501-a8fd-4267-ac2f-08eb106b0547",
			"description": "Verkada Webhook allows you to subscribe to data generated by Verkada. When you set up a webhook, all the Webhook events Verkada generates will automatically be pushed to a URL you specify. This allows you to get automatic updates for events you care about, without having to poll our API regularly.\n\nThe purpose on these endpoints is to test receiving a Verkada webhook object as sent by Postman. Either configure the \"your_webhook_listener\" environment variable or replace \"your_webhook_listener\" in the call with your webhook listener URL.\n\n[https://apidocs.verkada.com/reference/webhook-models](https://apidocs.verkada.com/reference/webhook-models)"
		}
	]
}